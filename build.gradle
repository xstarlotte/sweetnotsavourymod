buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'


    }
}

repositories {
    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = 'https://maven.parchmentmc.org' }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    mavenCentral()
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.charlotte.sweetnotsavourymod'
archivesBaseName = 'sweetnotsavourymod'



java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'parchment', version: '1.18.1-2022.02.13-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'


            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=sweetnotsavourymod.mixin.json"
            mods {
                sweetnotsavourymod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'


            property 'forge.logging.console.level', 'debug'

            mods {
                sweetnotsavourymod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')


            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'


            property 'forge.logging.console.level', 'debug'


            args '--mod', 'sweetnotsavourymod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                sweetnotsavourymod {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "sweetnotsavourymod.refmap.json"
    config "sweetnotsavourymod.mixin.json"

    debug.verbose = true
    debug.export = true
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.5.3.143:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.5.3.143")
    implementation fg.deobf('software.bernie.geckolib:geckolib-1.18-forge:3.0.12')

}


repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "sweetnotsavourymod",
                "Specification-Vendor": "sweetnotsavourymodsareus",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"sweetnotsavourymodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs": "sweetnotsavourymod.mixin.json"
        ])
    }



}


jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}